name: Tests
on:
  push:
    branches-ignore:
      - "master"
      - "main"
jobs:
  base-back:
    name: üì¶ Base Back
    runs-on: ubuntu-latest
    steps:
    - name: üìÇ Change directory
        run: cd back
      - name: ‚ú® Checkout
        uses: actions/checkout@v3
      - run: echo ${{ github.ref_name }} develop
      - name: üß∂ Install Yarn
        uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: "yarn"
      - name: üèéÔ∏è Cache Dependencies
        uses: actions/cache@v3
        id: cache-primes
        with:
          path: node_modules
          key: ${{ runner.os }}-npm-v3-${{ hashFiles('yarn.lock') }}
      - name: üì¶ Install Dependencies
        if: steps.cache-primes.outputs.cache-hit != 'true'
        run: yarn install
  unit-test:
    name: "üß™ Unit Tests"
    if: contains(github.event.head_commit.message, '(no unit-test)') != true
    runs-on: ubuntu-latest
    needs:
      - base-back
    steps:
      - name: ‚ú® Checkout
        uses: actions/checkout@v3
      - name: üß∂ Install Yarn
        uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: "yarn"
      - name: üì¶ Cache Dependencies
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-npm-v3-${{ hashFiles('yarn.lock') }}
      - name: üß™ Run Unit Tests
        working-directory: ./back
        run: yarn test:unit:ci
        env:
          NEXT_PUBLIC_FBASE_API_KEY: "${{ secrets.NEXT_PUBLIC_DEV_FBASE_API_KEY }}"
          NEXT_PUBLIC_FBASE_PROJECT_ID: "pusher-292200"
  end-to-end-test:
    name: üñºÔ∏è End-to-End Tests
    if: |
      contains(github.event.head_commit.message, '(_deploy)') ||
      ${{ github.ref_name == 'develop' }}
    runs-on: ubuntu-latest
    needs: base-back
    steps:
      - name: ‚ú® Checkout
        uses: actions/checkout@v3
      - name: üß∂ Install Yarn
        uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: "yarn"
      - name: üì¶ Retrieve Dependencies
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-npm-v3-${{ hashFiles('yarn.lock') }}
      - name: üëÄ Build for tests (dev keys)
        if: contains(github.event.head_commit.message, '(fall_deploy)') != true
        run: yarn build
        env:
          NEXT_PUBLIC_GTM_ID: "GTM-TGHXLRJ"
          NEXT_PUBLIC_FBASE_API_KEY: "${{ secrets.NEXT_PUBLIC_DEV_FBASE_API_KEY }}"
          NEXT_PUBLIC_FBASE_PROJECT_ID: "pusher-292200"
          NEXT_PUBLIC_FBASE_MESSAGING_SENDER_ID: "${{ secrets.NEXT_PUBLIC_DEV_FBASE_MESSAGING_SENDER_ID }}"
          NEXT_PUBLIC_FBASE_APP_ID: "${{ secrets.NEXT_PUBLIC_DEV_FBASE_APP_ID }}"
          NEXT_PUBLIC_FBASE_MEASUREMENT_ID: "${{ secrets.NEXT_PUBLIC_DEV_FBASE_MEASUREMENT_ID }}"
          NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: "${{ secrets.NEXT_PUBLIC_DEV_STRIPE_PUBLISHABLE_KEY }}"
          NEXT_PUBLIC_API_BASE_URL: "https://dev-api.flim.ai/2.0.0"
          NEXT_PUBLIC_APP_ENV: "test"
      - name: üëÄ Build for tests (prod keys)
        if: contains(github.event.head_commit.message, '(fall_deploy)')
        run: yarn build
        env:
          NEXT_PUBLIC_GTM_ID: "GTM-MGH9PP5"
          NEXT_PUBLIC_FBASE_API_KEY: "${{ secrets.NEXT_PUBLIC_FBASE_API_KEY }}"
          NEXT_PUBLIC_FBASE_PROJECT_ID: flim-prod
          NEXT_PUBLIC_FBASE_MESSAGING_SENDER_ID: "${{ secrets.NEXT_PUBLIC_FBASE_MESSAGING_SENDER_ID }}"
          NEXT_PUBLIC_FBASE_APP_ID: "${{ secrets.NEXT_PUBLIC_FBASE_APP_ID }}"
          NEXT_PUBLIC_FBASE_MEASUREMENT_ID: "${{ secrets.NEXT_PUBLIC_FBASE_MEASUREMENT_ID }}"
          NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: "${{ secrets.NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY }}"
          NEXT_PUBLIC_API_BASE_URL: "https://api.flim.ai/2.0.0"
          NEXT_PUBLIC_APP_ENV: "test"
      - name: üì¶ Install Cypress binaries
        run: npx cypress install
      - name: üñº Cypress Tests
        uses: cypress-io/github-action@v2
        timeout-minutes: 10
        with:
          config-file: cypress.config.ts
          start: "yarn serve"
          browser: chrome
          headless: true
          record: false
          env: true
        env:
          CYPRESS_MODE: ${{contains(github.event.head_commit.message, '(fall_deploy)') && 'prod' || 'dev'}}
  # build-spring:
  #   name: "üöÄ Build & Deploy on Spring"
  #   if: contains(github.event.head_commit.message, '(spring_deploy)')
  #   runs-on: ubuntu-latest
  #   needs:
  #     - base
  #     - unit-test
  #     - end-to-end-test
  #   steps:
  #     - name: ‚ú® Checkout
  #       uses: actions/checkout@v3
  #     - name: üß∂ Install Yarn
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: "16"
  #         cache: "yarn"
  #     - name: üì¶ Retrieve Dependencies
  #       uses: actions/cache@v3
  #       with:
  #         path: node_modules
  #         key: ${{ runner.os }}-npm-v3-${{ hashFiles('yarn.lock') }}
  #     - name: üöö Build site
  #       run: yarn build
  #       env:
  #         NEXT_PUBLIC_GTM_ID: "GTM-TGHXLRJ"
  #         NEXT_PUBLIC_FBASE_API_KEY: "${{ secrets.NEXT_PUBLIC_DEV_FBASE_API_KEY }}"
  #         NEXT_PUBLIC_FBASE_PROJECT_ID: "pusher-292200"
  #         NEXT_PUBLIC_FBASE_MESSAGING_SENDER_ID: "${{ secrets.NEXT_PUBLIC_DEV_FBASE_MESSAGING_SENDER_ID }}"
  #         NEXT_PUBLIC_FBASE_APP_ID: "${{ secrets.NEXT_PUBLIC_DEV_FBASE_APP_ID }}"
  #         NEXT_PUBLIC_FBASE_MEASUREMENT_ID: "${{ secrets.NEXT_PUBLIC_DEV_FBASE_MEASUREMENT_ID }}"
  #         NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: "${{ secrets.NEXT_PUBLIC_DEV_STRIPE_PUBLISHABLE_KEY }}"
  #         NEXT_PUBLIC_API_BASE_URL: "https://dev-api.flim.ai/2.0.0"
  #     - name: üöÄ Export site
  #       run: yarn export
  #     - name: üî• Deploy to Firebase
  #       uses: FirebaseExtended/action-hosting-deploy@v0
  #       with:
  #         repoToken: "${{ secrets.GITHUB_TOKEN }}"
  #         firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT_PUSHER_292200 }}"
  #         projectId: pusher-292200
  #         channelId: live
  #         target: "flim-spring"
  #       env:
  #         FIREBASE_CLI_PREVIEWS: hostingchannels
  # build-summer:
  #   name: "üöÄ Build & Deploy on Summer"
  #   if: ${{ github.ref_name == 'develop' }}
  #   runs-on: ubuntu-latest
  #   needs:
  #     - base
  #     - unit-test
  #     - end-to-end-test
  #   steps:
  #     - name: ‚ú® Checkout
  #       uses: actions/checkout@v3
  #     - name: üß∂ Install Yarn
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: "16"
  #         cache: "yarn"
  #     - name: üì¶ Retrieve Dependencies
  #       uses: actions/cache@v3
  #       with:
  #         path: node_modules
  #         key: ${{ runner.os }}-npm-v3-${{ hashFiles('yarn.lock') }}
  #     - name: üöö Build site
  #       run: yarn build
  #       env:
  #         NEXT_PUBLIC_GTM_ID: "GTM-TGHXLRJ"
  #         NEXT_PUBLIC_FBASE_API_KEY: "${{ secrets.NEXT_PUBLIC_DEV_FBASE_API_KEY }}"
  #         NEXT_PUBLIC_FBASE_PROJECT_ID: "pusher-292200"
  #         NEXT_PUBLIC_FBASE_MESSAGING_SENDER_ID: "${{ secrets.NEXT_PUBLIC_DEV_FBASE_MESSAGING_SENDER_ID }}"
  #         NEXT_PUBLIC_FBASE_APP_ID: "${{ secrets.NEXT_PUBLIC_DEV_FBASE_APP_ID }}"
  #         NEXT_PUBLIC_FBASE_MEASUREMENT_ID: "${{ secrets.NEXT_PUBLIC_DEV_FBASE_MEASUREMENT_ID }}"
  #         NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: "${{ secrets.NEXT_PUBLIC_DEV_STRIPE_PUBLISHABLE_KEY }}"
  #         NEXT_PUBLIC_API_BASE_URL: "https://dev-api.flim.ai/2.0.0"
  #     - name: üöÄ Export site
  #       run: yarn export
  #     - name: üî• Deploy to Firebase
  #       uses: FirebaseExtended/action-hosting-deploy@v0
  #       with:
  #         repoToken: "${{ secrets.GITHUB_TOKEN }}"
  #         firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT_PUSHER_292200 }}"
  #         projectId: pusher-292200
  #         channelId: live
  #         target: "default"
  #       env:
  #         FIREBASE_CLI_PREVIEWS: hostingchannels
  # build-fall:
  # name: "üöÄ Build & Deploy on Fall"
  # if: contains(github.event.head_commit.message, '(fall_deploy)')
  # runs-on: ubuntu-latest
  # needs:
  #   - base
  #   - unit-test
  #   - end-to-end-test
  # steps:
  #   - name: ‚ú® Checkout
  #     uses: actions/checkout@v3
  #   - name: üß∂ Install Yarn
  #     uses: actions/setup-node@v3
  #     with:
  #       node-version: "16"
  #       cache: "yarn"
  #   - name: üì¶ Retrieve Dependencies
  #     uses: actions/cache@v3
  #     with:
  #       path: node_modules
  #       key: ${{ runner.os }}-npm-v3-${{ hashFiles('yarn.lock') }}
  #   - name: üöö Build site
  #     run: yarn build
  #     env:
  #       NEXT_PUBLIC_GTM_ID: "GTM-MGH9PP5"
  #       NEXT_PUBLIC_FBASE_API_KEY: "${{ secrets.NEXT_PUBLIC_FBASE_API_KEY }}"
  #       NEXT_PUBLIC_FBASE_PROJECT_ID: flim-prod
  #       NEXT_PUBLIC_FBASE_MESSAGING_SENDER_ID: "${{ secrets.NEXT_PUBLIC_FBASE_MESSAGING_SENDER_ID }}"
  #       NEXT_PUBLIC_FBASE_APP_ID: "${{ secrets.NEXT_PUBLIC_FBASE_APP_ID }}"
  #       NEXT_PUBLIC_FBASE_MEASUREMENT_ID: "${{ secrets.NEXT_PUBLIC_FBASE_MEASUREMENT_ID }}"
  #       NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: "${{ secrets.NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY }}"
  #       NEXT_PUBLIC_API_BASE_URL: "https://api.flim.ai/2.0.0"
  #   - name: üöÄ Export site
  #     run: yarn export
  #   - name: üî• Deploy to Firebase
  #     uses: FirebaseExtended/action-hosting-deploy@v0
  #     with:
  #       repoToken: "${{ secrets.GITHUB_TOKEN }}"
  #       firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT_FLIM_PROD }}"
  #       projectId: flim-prod
  #       channelId: live
  #       target: "flim-fall"
  #     env:
  #       FIREBASE_CLI_PREVIEWS: hostingchannels
